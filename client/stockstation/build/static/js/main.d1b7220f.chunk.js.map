{"version":3,"sources":["Constants/PageTypes/PageTypes.js","Components/Auth/Components/SignForm/SignForm.js","Constants/APIEndpoints/APIEndpoints.js","Components/Errors/Errors.js","Components/Auth/Components/SignUp/SignUp.js","Components/Auth/Components/SignIn/SignIn.js","Components/Auth/Components/ForgotPassword/ForgotPassword.js","Components/Auth/Auth.js","Styles/Style.js","Styles/theme.js","Components/Footer/Footer.js","Constants/CardTypes/Cardtypes.js","Components/Card/Components/UserSub-Card/UserSub-Card.js","Components/Card/Components/Product-card/Product-card.js","Components/Card/Card.js","Components/Greeting-auth/Greeting-auth.js","Components/Main/Components/SignOutButton/SignOutButton.js","Components/Main/Components/UpdateName/UpdateName.js","Components/Greeting-menu/Greeting-menu.js","App.js","serviceWorker.js","index.js"],"names":["SignForm","setField","submitForm","values","fields","onSubmit","map","d","key","TextField","variant","margin","required","fullWidth","id","label","name","autoComplete","autoFocus","type","onChange","value","size","Button","color","users","myuser","myuserAvatar","sessions","sessionsMine","resetPasscode","passwords","product","subscription","Errors","error","setError","className","onClick","SignUp","props","e","setState","target","a","preventDefault","state","email","userName","firstName","lastName","password","passwordConf","sendData","console","log","fetch","api","method","body","JSON","stringify","headers","Headers","response","status","text","authToken","get","localStorage","setItem","setAuthToken","json","user","setUser","this","setPage","PageTypes","Component","SignIn","ForgotPassword","sendResetCode","alert","resetCodeSent","updatePassword","resetCode","setValue","Auth","page","useStyles","makeStyles","theme","icon","marginRight","spacing","heroContent","backgroundColor","palette","background","paper","padding","heroButtons","marginTop","cardGrid","paddingTop","paddingBottom","card","height","display","flexDirection","cardMedia","cardContent","flexGrow","footer","createMuiTheme","primary","light","main","dark","contrastText","secondary","Footer","Typography","align","Link","href","Date","getFullYear","UserSubCard","data","getSubData","deleteSub","subscribeID","getItem","Grid","item","xs","sm","md","CardMedia","image","imageLink","title","style","CardContent","gutterBottom","component","productName","createdAt","CardActions","trigger","position","modal","nested","close","ProductCard","createSubscription","productID","reqData","description","productLink","Card","cardType","CardType","GreetingAuth","paragraph","SignOutButton","useState","removeItem","UpdateName","sendRequest","GreetingMenu","container","justify","App","getCurrentUser","getSubscriptionData","getProductData","subscriptionData","setUserSubscriptionData","productData","setProductData","setPageToSignIn","setPageToSignUp","userSubscriptionData","loading","ThemeProvider","CssBaseline","AppBar","Toolbar","noWrap","Container","maxWidth","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d1b7220f.chunk.js","sourcesContent":["export default {\n    signIn: \"SIGNIN\",\n    signUp: \"SIGNUP\",\n    signedInMain: \"SIGNEDIN_MAIN\",\n    signedInUpdateName: \"SIGNEDIN_UPDATENAME\",\n    signedInUpdateAvatar: \"SIGNEDIN_UPDATEAVATAR\",\n    forgotPassword: \"FORGOT_PASSWORD\"\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\n\nconst SignForm = ({ setField, submitForm, values, fields }) => {\n    return <>\n        <form onSubmit={submitForm}>\n            {fields.map(d => {\n                const { key } = d;\n                return <div key={key}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"email\"\n                        label={key}\n                        name={key}\n                        autoComplete=\"email\"\n                        autoFocus\n                        type={key === \"password\" || key === \"passwordConf\" ? \"password\" : ''}\n                        onChange={setField}\n                        value={values[key]}\n                        size=\"small\"\n                    />\n                </div>\n            })}\n            <div id=\"auth-submit-container\">\n                <Button size=\"small\" color=\"primary\" variant=\"outlined\" type=\"submit\"> Submit</Button>\n            </div>\n        </form>\n    </>\n}\n\nSignForm.propTypes = {\n    setField: PropTypes.func.isRequired,\n    submitForm: PropTypes.func.isRequired,\n    values: PropTypes.shape({\n        email: PropTypes.string.isRequired,\n        userName: PropTypes.string,\n        firstName: PropTypes.string,\n        lastName: PropTypes.string,\n        password: PropTypes.string.isRequired,\n        passwordConf: PropTypes.string\n    }),\n    fields: PropTypes.arrayOf(PropTypes.shape({\n        key: PropTypes.string,\n        name: PropTypes.string\n    }))\n}\n\nexport default SignForm;","const a4base = \"https://api.yichi.me\"\nconst productionbase =  \"https://api.stockstation.gay\"\n\n\nexport default {\n    base: productionbase,\n    testbase: \"https://localhost:4000\",\n    handlers: {\n        users: \"/v1/users\",\n        myuser: \"/v1/users/me\",\n        myuserAvatar: \"/v1/users/me/avatar\",\n        sessions: \"/v1/sessions\",\n        sessionsMine: \"/v1/sessions/mine\",\n        resetPasscode: \"/v1/resetcodes\",\n        passwords: \"/v1/passwords/\",\n        product: \"/v1/product\",\n        subscription: \"/v1/subscribe\"\n    }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Styles/Errors.css';\n\nconst Errors = ({ error, setError }) => {\n    switch (error) {\n        case \"\":\n            return <></>\n        default:\n            return <div className=\"error\">\n                <span className=\"error-hide\" onClick={() => setError(\"\")}>x</span>\n                Error: {error}\n            </div>\n    }\n}\n\nErrors.propTypes = {\n    error: PropTypes.string.isRequired,\n    setError: PropTypes.func\n}\n\nexport default Errors;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\nimport Button from '@material-ui/core/Button';\n\n/**\n * @class\n * @classdesc SignUp handles the sign up component\n */\nclass SignUp extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            userName: \"\",\n            firstName: \"\",\n            lastName: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Username\",\n                key: \"userName\"\n            },\n            {\n                name: \"First name\",\n                key: \"firstName\"\n            },\n            {\n                name: \"Last name\",\n                key: \"lastName\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            },\n            {\n                name: \"Password Confirmation\",\n                key: \"passwordConf\"\n            }];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        try {\n            e.preventDefault();\n            const { email,\n                userName,\n                firstName,\n                lastName,\n                password,\n                passwordConf } = this.state;\n            const sendData = {\n                email,\n                userName,\n                firstName,\n                lastName,\n                password,\n                passwordConf\n            };\n            console.log(sendData)\n            const response = await fetch(api.base + api.handlers.users, {\n                method: \"POST\",\n                body: JSON.stringify(sendData),\n                headers: new Headers({\n                    \"Content-Type\": \"application/json\"\n                })\n            });\n            console.log(response)\n            if (response.status >= 300) {\n                const error = await response.text();\n                this.setError(error);\n                return;\n            }\n            const authToken = response.headers.get(\"Authorization\")\n            localStorage.setItem(\"Authorization\", authToken);\n            this.setError(\"\");\n            this.props.setAuthToken(authToken);\n            const user = await response.json();\n            this.props.setUser(user);\n        } catch(err) {\n            console.log(err)\n        }\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <SignForm\n                setField={this.setField}\n                submitForm={this.submitForm}\n                values={values}\n                fields={this.fields} />\n                <div id=\"divider\"></div>\n            <Button variant='outlined' color='primary' size='small' onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Sign in instead</Button>\n        </>\n    }\n}\n\nexport default SignUp;","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport SignForm from '../SignForm/SignForm';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nimport Button from '@material-ui/core/Button';\n\n/**\n * @class\n * @classdesc SignIn handles the sign in component\n */\nclass SignIn extends Component {\n    static propTypes = {\n        setPage: PropTypes.func,\n        setAuthToken: PropTypes.func\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: \"\"\n        };\n\n        this.fields = [\n            {\n                name: \"Email\",\n                key: \"email\"\n            },\n            {\n                name: \"Password\",\n                key: \"password\"\n            }];\n    }\n\n    /**\n     * @description setField will set the field for the provided argument\n     */\n    setField = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    /**\n     * @description setError sets the error message\n     */\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    /**\n     * @description submitForm handles the form submission\n     */\n    submitForm = async (e) => {\n        e.preventDefault();\n        const { email, password } = this.state;\n        const sendData = { email, password };\n        const response = await fetch(api.base + api.handlers.sessions, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        const authToken = response.headers.get(\"Authorization\")\n        localStorage.setItem(\"Authorization\", authToken);\n        this.setError(\"\");\n        this.props.setAuthToken(authToken);\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    render() {\n        const values = this.state;\n        const { error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            <SignForm\n                setField={this.setField}\n                submitForm={this.submitForm}\n                values={values}\n                fields={this.fields} />\n\n            <div id=\"auth-button-container\">\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={(e) => this.props.setPage(e, PageTypes.signUp)}>Sign up instead</Button>\n                <div id='divider'></div>\n                <Button variant=\"outlined\" size=\"small\" color=\"primary\" onClick={(e) => this.props.setPage(e, PageTypes.forgotPassword)}>Forgot password</Button>\n            </div>\n        </>\n    }\n}\n\nexport default SignIn;","import React, { Component } from 'react';\nimport Errors from '../../../Errors/Errors';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport PageTypes from '../../../../Constants/PageTypes/PageTypes';\n\nclass ForgotPassword extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            email: \"\",\n            password: \"\",\n            passwordConf: \"\",\n            resetCode: \"\",\n            resetCodeSent: false,\n            error: \"\"\n        }\n    }\n\n    sendResetCode = async (e) => {\n        e.preventDefault();\n        const { email } = this.state;\n        const sendData = { email };\n        const response = await fetch(api.base + api.handlers.resetPasscode, {\n            method: \"POST\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"A reset code has been sent to your email\");\n        this.setState({ resetCodeSent: true });\n    }\n\n    updatePassword = async (e) => {\n        e.preventDefault();\n        const { email, password, passwordConf, resetCode } = this.state;\n        const sendData = { password, passwordConf, resetCode };\n        const response = await fetch(api.base + api.handlers.passwords + email, {\n            method: \"PUT\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            this.setError(error);\n            return;\n        }\n        this.setError(\"\");\n        alert(\"Your password has been updated\");\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error });\n    }\n\n    render() {\n        const { email, password, passwordConf, resetCode, resetCodeSent, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n            {resetCodeSent ?\n                <>\n                    <form onSubmit={(e) => this.updatePassword(e)}>\n                        <div>\n                            <span>Password: </span>\n                            <input name={\"password\"} type={\"password\"} onChange={this.setValue} value={password} />\n                        </div>\n                        <div>\n                            <span>Password Confirmation: </span>\n                            <input name={\"passwordConf\"} type={\"password\"} onChange={this.setValue} value={passwordConf} />\n                        </div>\n                        <div>\n                            <span>Reset Code: </span>\n                            <input name={\"resetCode\"} onChange={this.setValue} value={resetCode} />\n                        </div>\n                        <input type=\"submit\" value=\"Update my password\" />\n                    </form>\n                </>\n                :\n                <>\n                    <form onSubmit={(e) => this.sendResetCode(e)}>\n                        <div>\n                            <span>Email: </span>\n                            <input name={\"email\"} onChange={this.setValue} value={email} />\n                        </div>\n                        <input type=\"submit\" value=\"Send me a reset code\" />\n                    </form>\n                </>}\n            <button onClick={(e) => this.props.setPage(e, PageTypes.signIn)}>Back to sign in</button>\n\n\n        </>\n\n    }\n\n\n\n}\n\nexport default ForgotPassword;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport PageTypes from '../../Constants/PageTypes/PageTypes';\nimport SignUp from './Components/SignUp/SignUp';\nimport SignIn from './Components/SignIn/SignIn';\nimport ForgotPassword from './Components/ForgotPassword/ForgotPassword';\n\n/**\n * @class Auth\n * @description This is an auth object that controls what page\n * is loaded based on sign up or sign in state\n */\nconst Auth = ({ page, setPage, setAuthToken, setUser }) => {\n    switch (page) {\n        case PageTypes.signUp:\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.signIn:\n            return <SignIn setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n        case PageTypes.forgotPassword:\n            return <ForgotPassword setPage={setPage} />;\n        default:\n            return <SignUp setPage={setPage} setAuthToken={setAuthToken} setUser={setUser} />\n    }\n}\n\nAuth.propTypes = {\n    page: PropTypes.string.isRequired,\n    setPage: PropTypes.func.isRequired,\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default Auth;","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n      marginRight: theme.spacing(2),\n    },\n    heroContent: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n      marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n      paddingTop: theme.spacing(8),\n      paddingBottom: theme.spacing(8),\n    },\n    card: {\n      height: '100%',\n      display: 'flex',\n      flexDirection: 'column',\n    },\n    cardMedia: {\n      paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n      flexGrow: 1,\n    },\n    footer: {\n      backgroundColor: theme.palette.background.paper,\n      padding: theme.spacing(6),\n    },\n  }));\n\nexport default useStyles","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n        primary: {\n          light: '#757ce8',\n          main: '#3f50b5',\n          dark: '#002884',\n          contrastText: '#fff',\n        },\n        secondary: {\n          light: '#ff7961',\n          main: '#f44336',\n          dark: '#ba000d',\n          contrastText: '#000',\n        },\n      },\n  });\n\n\nexport default theme;","import React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\n//import CameraIcon from '@material-ui/icons/PhotoCamera';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\n\nconst Footer = () => {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Yichi Zhang, Lyon Lu, Wendell Li, Lance Zhong\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\nexport default Footer","export default {\n    userSubCard: \"USER_SUB\",\n    productCard: \"PRODUCT_CARD\"\n}","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../../../../Styles/Style'\nimport Popup from 'reactjs-popup';\nimport './UserSub-Card.css'\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\n\nconst UserSubCard = ({data, getSubData}) => {\n\n  const deleteSub = async (subscribeID) => {\n    console.log(api.base + api.handlers.subscription + `/${subscribeID}`)\n    const response = await fetch(api.base + api.handlers.subscription + `/${subscribeID}`, {\n        headers: new Headers({ \"Authorization\": localStorage.getItem(\"Authorization\") }),\n        method: 'DELETE',\n    });\n    if (response.status >= 300) {\n        alert(\"Unable to delete subscription. Please try again\");\n        return;\n    }\n\n    alert(\"Delete Success!\")\n    // refresh sub data and re-render\n    getSubData()\n}\n\n    return (\n        <Grid item key={data.subscribeID} xs={12} sm={6} md={4}>\n        <Card className={useStyles.card}>\n            <CardMedia\n            className={useStyles.cardMedia}\n            image={data.imageLink}\n            title=\"Image title\"\n            style={{height: 15 + \"em\"}}\n            />\n            <CardContent className={useStyles.cardContent}>\n            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                {data.productName}\n            </Typography>\n            <Typography>\n                <br/>\n                {`Subscribe date: ${data.createdAt}`}\n            </Typography>\n            </CardContent>\n            <CardActions>\n            <Popup \n                trigger={<Button size=\"small\" color=\"primary\">Delete</Button>} \n                position=\"right center\" modal nested>\n\n                {close => (\n                  <div className=\"modal\">\n                    <button className=\"close\" onClick={close}>\n                      &times;\n                    </button>\n                    <div className=\"header\"> Confirm Deletion </div>\n                    <div className=\"content\">\n                      {' '}\n                      Are yous sure to delete this product subscription?\n                    </div>\n                    <div className=\"actions\">\n\n                    <Button\n                          variant='outlined'\n                          color='primary'\n                          className=\"button\"\n                          onClick={() => {\n                            console.log('modal closed ');\n                            close();\n                          }}\n                        >\n                          Cancel\n                      </Button>\n                      <Button\n                          variant='outlined'\n                          color='primary'\n                        className=\"button\"\n                        onClick={() => {\n                          deleteSub(data.subscribeID) // might need to change the \"_id\" field name\n                          close();\n                        }}\n                      >\n                        Delete\n                      </Button>\n                    </div>\n                  </div>\n                )}\n             </Popup>\n            </CardActions>\n        </Card>\n        </Grid>\n    )\n}\n\nexport default UserSubCard","import React from 'react';\nimport Button from '@material-ui/core/Button';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport useStyles from '../../../../Styles/Style'\nimport Popup from 'reactjs-popup';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\n\nconst ProductCard = ({ data, getSubData }) => {\n\n    const createSubscription = async (productID) => {\n        const reqData = {productID: productID}\n        console.log(reqData)\n        const response = await fetch(api.base + api.handlers.subscription, {\n            headers: new Headers({ \"Authorization\": localStorage.getItem(\"Authorization\"), \"Content-Type\": \"application/json\" }),\n            method: \"POST\",\n            body: JSON.stringify(reqData)\n        });\n        if (response.status >= 300) {\n            console.log(response)\n            alert(\"Unable to create subscription Product data. Please try again\");\n            return;\n        }\n        \n        alert(\"Subscription Successful!\");\n        getSubData()\n    }\n\n    return (\n        <Grid item key={data.productName} xs={12} sm={6} md={4}>\n            <Card className={useStyles.card}>\n                <CardMedia\n                className={useStyles.cardMedia}\n                image={data.imageLink}\n                title=\"Image title\"\n                style={{height: 15 + \"em\"}}\n                />\n                <CardContent className={useStyles.cardContent}>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                    {data.productName}\n                </Typography>\n                <Typography>\n                    {data.description}\n                </Typography>\n\n                <Typography>\n                    <br/>\n                    <a href={data.productLink} className='product-link'>Link to the product </a>\n                </Typography>\n                </CardContent>\n                <CardActions>\n                <Popup \n                trigger={<Button size=\"small\" color=\"primary\">Subscribe</Button>} \n                position=\"right center\" modal nested>\n\n                {close => (\n                  <div className=\"modal\">\n                    <button className=\"close\" onClick={close}>\n                      &times;\n                    </button>\n                    <div className=\"header\"> Subscription Confirmation</div>\n                    <div className=\"content\">\n                      {' '}\n                      Please click to confirm your subscription\n                    </div>\n                    <div className=\"actions\">\n\n                      <Button\n                          variant='outlined'\n                          color='primary'\n                          className=\"button\"\n                          onClick={() => {\n                            console.log('modal closed ');\n                            close();\n                          }}\n                        >\n                          Cancel\n                      </Button>\n                      <Button\n                          variant='outlined'\n                          color='primary'\n                        className=\"button\"\n                        onClick={() => {\n                          createSubscription(data.productID);\n                          close();\n                        }}\n                      >\n                        Confirm\n                      </Button>\n                    </div>\n                  </div>\n                )}\n             </Popup>\n                </CardActions>\n            </Card>\n        </Grid>\n    )\n}\n\n\n\nexport default ProductCard","import CardType from '../../Constants/CardTypes/Cardtypes'\nimport UserSubCard from './Components/UserSub-Card/UserSub-Card'\nimport ProductCard from './Components/Product-card/Product-card'\n\nconst Card = (props) => {\n    switch (props.cardType) {\n        case CardType.productCard:\n            return <ProductCard data={props.data} getSubData={props.getSubData}/>;\n        case CardType.userSubCard:\n            return <UserSubCard data={props.data} getSubData={props.getSubData}/>; \n        default: \n            return null\n    }\n}\n\nexport default Card","import Typography from '@material-ui/core/Typography';\n\nconst GreetingAuth = () => {\n    return (\n        <>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                Stock Station\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                Get notificaiton about popular products, instantly\n            </Typography>\n        </>\n    )\n}\n\nexport default GreetingAuth;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport Button from '@material-ui/core/Button';\n\nconst SignOutButton = ({ setAuthToken, setUser }) => {\n    const [error, setError] = useState(\"\");\n\n    return <><Button variant=\"outlined\" color=\"primary\" onClick={async (e) => {\n        e.preventDefault();\n        const response = await fetch(api.base + api.handlers.sessionsMine, {\n            method: \"DELETE\",\n            headers: new Headers({ \"Authorization\": localStorage.getItem(\"Authorization\") })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            setError(error);\n            return;\n        }\n        localStorage.removeItem(\"Authorization\");\n        setError(\"\");\n        setAuthToken(\"\");\n        setUser(null);\n    }}>Sign out</Button>\n        {error &&\n            <div>\n                <Errors error={error} setError={setError} />\n            </div>\n        }\n    </>\n}\n\nSignOutButton.propTypes = {\n    setAuthToken: PropTypes.func.isRequired,\n    setUser: PropTypes.func.isRequired\n}\n\nexport default SignOutButton;","import React, { Component } from 'react';\nimport api from '../../../../Constants/APIEndpoints/APIEndpoints';\nimport Errors from '../../../Errors/Errors';\nimport Button from '@material-ui/core/Button';\nimport Popup from 'reactjs-popup';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\n\nimport { createMuiTheme } from '@material-ui/core/styles';\nimport { ThemeProvider } from '@material-ui/styles';\n\nconst theme = createMuiTheme({\n    palette: {\n      primary: {\n        // Purple and green play nicely together.\n        main: '#11cb5f',\n      },\n      secondary: {\n        // This is green.A700 as hex.\n        main: '#11cb5f',\n      },\n    },\n  });\n\nclass UpdateName extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            firstName: '',\n            lastName: '',\n            error: ''\n        }\n    }\n\n    sendRequest = async (e) => {\n        e.preventDefault();\n        const { firstName, lastName, email } = this.state;\n        const sendData = { firstName, lastName, email };\n        const response = await fetch(api.base + api.handlers.myuser, {\n            method: \"PATCH\",\n            body: JSON.stringify(sendData),\n            headers: new Headers({\n                \"Authorization\": localStorage.getItem(\"Authorization\"),\n                \"Content-Type\": \"application/json\"\n            })\n        });\n        if (response.status >= 300) {\n            const error = await response.text();\n            console.log(error);\n            this.setError(error);\n            return;\n        }\n        alert(\"Name changed\") // TODO make this better by refactoring errors\n        const user = await response.json();\n        this.props.setUser(user);\n    }\n\n    setValue = (e) => {\n        this.setState({ [e.target.name]: e.target.value });\n    }\n\n    setError = (error) => {\n        this.setState({ error })\n    }\n\n    render() {\n        const { firstName, lastName, error } = this.state;\n        return <>\n            <Errors error={error} setError={this.setError} />\n\n            <Popup \n                trigger={<Button variant=\"outlined\" color=\"primary\">Update User Info</Button>} \n                position=\"right center\" modal nested>\n\n                {close => (\n                  <div className=\"modal\">\n                    <Typography>Enter a new name</Typography>\n                    <form onSubmit={this.sendRequest}>\n                        <div >\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"firstName\"\n                                label=\"firstName\"\n                                name=\"firstName\"\n                                autoComplete=\"firstName\"\n                                autoFocus\n                                type=''\n                                onChange={this.setValue}\n                                value={firstName}\n                                size=\"small\"\n                            />\n                        </div>\n                        <div >\n                            <TextField\n                                variant=\"outlined\"\n                                margin=\"normal\"\n                                required\n                                fullWidth\n                                id=\"lastName\"\n                                label=\"lastName\"\n                                name=\"lastName\"\n                                autoComplete=\"lastName\"\n                                autoFocus\n                                type=''\n                                onChange={this.setValue}\n                                value={lastName}\n                                size=\"small\"\n                            />\n                        </div>\n                        <Button size=\"small\" type=\"submit\" color=\"primary\"> Submit</Button>\n                \n                        <Button size=\"small\" color=\"primary\" onClick={() => {close()}}>Cancel</Button>\n                    </form>\n                  </div>\n                )}\n             </Popup>\n        </>\n    }\n\n}\n\nexport default UpdateName;","import Typography from '@material-ui/core/Typography';\nimport Grid from '@material-ui/core/Grid';\nimport useStyles from '../../Styles/Style'\nimport SignOutButton from '../Main/Components/SignOutButton/SignOutButton'\nimport UpdateName from '../Main/Components/UpdateName/UpdateName'\n\nconst GreetingMenu = ({user, setUser, setAuthToken }) => {\n    return (\n        <>\n            <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                {`Hi, ${user.userName}`}\n            </Typography>\n            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                Ready to roll with Stock Station?\n            </Typography>\n            <div className={useStyles.heroButtons}>\n                <br/>\n                <Grid container spacing={2} justify=\"center\" >\n                <Grid item>\n                    <UpdateName user={user} setUser={setUser} />\n                </Grid>\n                <Grid item>\n                    <SignOutButton setUser={setUser} setAuthToken={setAuthToken} />\n                </Grid>\n                </Grid>\n            </div>\n        </>\n    )\n}\n\nexport default GreetingMenu;","import React, { Component } from 'react';\nimport Auth from './Components/Auth/Auth';\nimport PageTypes from './Constants/PageTypes/PageTypes';\nimport './Styles/App.css';\nimport api from './Constants/APIEndpoints/APIEndpoints';\n// marterial-ui template imports\nimport AppBar from '@material-ui/core/AppBar';\n//import CameraIcon from '@material-ui/icons/PhotoCamera';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Grid from '@material-ui/core/Grid';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport useStyles from './Styles/Style'\nimport theme from './Styles/theme'\nimport Footer from './Components/Footer/Footer'\nimport CardType from './Constants/CardTypes/Cardtypes'\nimport Card from './Components/Card/Card'\nimport './App.css'\nimport MOCK_SUBSCRIPTION_DATA from './Constants/StaticData/Mock-sub-data'\nimport MOCK_PRODUCT_DATA from './Constants/StaticData/Mock-product-data'\nimport GreetingAuth from './Components/Greeting-auth/Greeting-auth'\nimport GreetingMenu from './Components/Greeting-menu/Greeting-menu'\nimport { ThemeProvider } from '@material-ui/styles';\n\nclass App extends Component {\n    constructor() {\n        super();\n        this.state = {\n            page: localStorage.getItem(\"Authorization\") ? PageTypes.signedInMain : PageTypes.signIn,\n            authToken: localStorage.getItem(\"Authorization\") || null,\n            user: null,\n            loading: false,\n            userSubscriptionData: null,\n            productData: null\n        }\n        console.log(\"user is: \", this.state.user)\n        console.log(\"auth token is: \", this.state.authToken)\n        console.log(\"page is: \", this.state.page)\n\n        this.getCurrentUser()\n    }\n\n    /**\n     * @description Gets the users\n     */\n    getCurrentUser = async () => {\n        if (!this.state.authToken) {\n            return;\n        }\n        const response = await fetch(api.base + api.handlers.myuser, {\n            headers: new Headers({\n                \"Authorization\": this.state.authToken\n            })\n        });\n        if (response.status >= 300) {\n            alert(\"Unable to verify login. Logging out...\");\n            localStorage.setItem(\"Authorization\", \"\");\n            this.setAuthToken(\"\");\n            this.setUser(null)\n            return;\n        }\n        const user = await response.json()\n        this.setUser(user);\n\n        // get user-specific data after retrieved user data\n        this.getSubscriptionData()\n        this.getProductData()\n\n        console.log(\"user is: \", this.state.user)\n        console.log(\"auth token is: \", this.state.authToken)\n        console.log(\"page is: \", this.state.page)\n    }\n\n    getSubscriptionData = async () => {\n        if (!this.state.authToken) {\n            return;\n        }\n        const response = await fetch(api.base + api.handlers.subscription, {\n            headers: new Headers({\n                \"Authorization\": this.state.authToken\n            }),\n            method: \"GET\"\n        });\n        if (response.status >= 300) {\n            alert(\"Unable to fetch subscription data. Please try again\");\n            localStorage.setItem(\"Authorization\", \"\");\n            this.setAuthToken(\"\");\n            return;\n        }\n\n        const subscriptionData = await response.json()\n        this.setUserSubscriptionData(subscriptionData)\n    }\n\n    getProductData = async () => {\n        if (!this.state.authToken) {\n            return;\n        }\n        const response = await fetch(api.base + api.handlers.product, {\n            headers: new Headers({\n                \"Authorization\": this.state.authToken\n            }),\n            method: \"GET\"\n        });\n        if (response.status >= 300) {\n            alert(\"Unable to fetch Product data. Please try again\");\n            localStorage.setItem(\"Authorization\", \"\");\n            this.setAuthToken(\"\");\n            return;\n        }\n\n        const productData = await response.json()\n        this.setProductData(productData);\n    }\n\n    /**\n     * @description sets the page type to sign in\n     */\n    setPageToSignIn = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signIn });\n    }\n\n    /**\n     * @description sets the page type to sign up\n     */\n    setPageToSignUp = (e) => {\n        e.preventDefault();\n        this.setState({ page: PageTypes.signUp });\n    }\n\n    setPage = (e, page) => {\n        e.preventDefault();\n        this.setState({ page });\n    }\n\n    /**\n     * @description sets auth token\n     */\n    setAuthToken = (authToken) => {\n        this.setState({ authToken, page: authToken === \"\" ? PageTypes.signIn : PageTypes.signedInMain });\n   \n        console.log(\"user is: \", this.state.user)\n        console.log(\"auth token is: \", this.state.authToken)\n        console.log(\"page is: \", this.state.page)\n    }\n\n    /**\n     * @description sets the user\n     */\n    setUser = (user) => {\n        this.setState({ user });\n    }\n\n    /**\n     * @description sets the user subscription data\n     */\n    setUserSubscriptionData = (data) => {\n        this.setState({ userSubscriptionData: data });\n    }\n\n    /**\n     * @description sets available product data\n     */\n    setProductData = (data) => {\n        this.setState({productData: data})\n\n        console.log(\"user is: \", this.state.user)\n        console.log(\"auth token is: \", this.state.authToken)\n        console.log(\"page is: \", this.state.page)\n    }\n\n    render() {\n        const { page, user, userSubscriptionData, productData} = this.state;\n        return (\n            <div id=\"main-container\">\n\n            <ThemeProvider theme={theme}>\n                <CssBaseline />\n                <AppBar position=\"relative\">\n                <Toolbar>\n                    <Typography variant=\"h6\" color=\"inherit\" noWrap>\n                    Stock Station\n                    </Typography>\n                </Toolbar>\n                </AppBar>\n                <main>\n                {/* Hero unit */}\n                    <div className={useStyles.heroContent} id=\"Greeting\">\n                        <Container maxWidth=\"sm\">\n                            {!user ? (<GreetingAuth/>) : (<GreetingMenu user={user} setUser={this.setUser} setAuthToken={this.setAuthToken}/>)}\n                        </Container>\n                    </div>\n\n                    <div id=\"auth-page\">\n                        {(!user || this.state.page === PageTypes.signIn) &&\n                            <Auth page={page}\n                                setPage={this.setPage}\n                                setAuthToken={this.setAuthToken}\n                                setUser={this.setUser} />\n                        }\n                    </div>\n\n                    {(user && this.state.page === PageTypes.signedInMain) && \n                        <div id=\"user-specific-info\">\n                        <Container className={useStyles.cardGrid} maxWidth=\"md\">\n                            {/* End hero unit */}\n                            <h1>Currently Available product </h1>\n                            <Grid container spacing={4}>\n                            {productData && productData.map((card) => (\n                                <Card data={card} cardType={CardType.productCard} getSubData={this.getSubscriptionData} />\n                            ))}\n                            </Grid>\n                        </Container>\n                        <Container className={useStyles.cardGrid} maxWidth=\"md\">\n                            {/* End hero unit */}\n                            <h1>Your Current subscription</h1>\n                            <Grid container spacing={4}>\n                            {userSubscriptionData && userSubscriptionData.map((card) => (\n                                <Card data={card} cardType={CardType.userSubCard} getSubData={this.getSubscriptionData}/>\n                            ))}\n\n                            {!userSubscriptionData && \n                                <Typography component=\"h4\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                    Stock Station\n                                </Typography>\n                            }\n                            </Grid>\n                        </Container>\n                        </div>}\n                </main>\n\n                {/* Footer */}\n                <footer className={useStyles.footer}>\n                    <Typography variant=\"h6\" align=\"center\" gutterBottom>\n                        Stock Station\n                    </Typography>\n                    <Footer />\n                </footer>\n                {/* End footer */}\n                </ThemeProvider> \n            </div>\n        );\n    }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}